{"name":"Dentist.js","tagline":"Dentist JS helps extract out those darn parameters of an URL! Useful with Google Docs URL and stuff!","body":"[![Build Status](https://travis-ci.org/kelvintaywl/dentist.js.svg?branch=master)](https://travis-ci.org/kelvintaywl/dentist.js)\r\n\r\n# Dentist JS\r\n\r\n##TL;DR\r\n\r\nWorking with URLs or jQuery's serialize() method? Call on Dentist JS to extract those parameters!\r\nDentist JS extracts anything as long as they are strings!\r\n\r\nEXAMPLE:\r\n\r\n```javascript\r\n// document.URL == \"http://helloworld.com/quotes?id=1337&author=kelvin&message=hello\"\r\nvar currentURL = document.URL;\r\nvar params = currentURL.extract();\r\nconsole.log(params.id); // 1337\r\nconsole.log(params.author) // \"kelvin\"\r\nconsole.log(params.message) // \"hello\"\r\n```\r\nDentist JS is smart enough to know when to return a string or integer instead too!\r\n\r\n## WHY\r\nOften, we have systems that require the user to enter url addresses. These scenarios include (inexhaustive):\r\n\r\n- reporting current page's URL address to error-reporting functions or systems\r\n- entering current URL of Google spreadsheet to system (for system to parse data in these spreadsheets)\r\n\r\nUsually, these URLs include parameters that can be valuable or essential for the developer. Sadly, Javascript does not come with a method that allows us to pull out these parameters. \r\n\r\nAlso, instead of using jQuery's seralizeArray() (when dealing with AJAX and forms), we can now use Dentist JS to get to those parameters more efficiently ( O(1), rather than O(n))\r\n\r\n### HOW\r\n\r\nExample, a form (id: form) contains two inputs : {name: 'username', value; \"nyancat\"} and {name: 'password', value: \"nyannyan\"}\r\n\r\n```javascript\r\n$('#form').submit(function(e){\r\n\te.preventDefault();\r\n\tvar s = $(this).serialize(); // \"username=nyancat&password=nyannyan\"\r\n\t$(this).serializeArray(); // [{name: 'username', value; \"nyancat\"}, {name: 'password', value: \"nyannyan\"}]\r\n\tvar formParams = s.extract() // {username: 'nyancat', password: 'nyannyan'}\r\n\tformParams.username; // 'nyancat'\r\n\tformParams.password; // 'nyannyan'\r\n});\r\n```\r\n\r\n\r\n## API Usage\r\n\r\nDentist JS allows the following options when extracting.\r\n\r\n| name | description | default |\r\n| ---- | ---- | ---- |\r\n| delimiter | char or string which separates each parameter | '&' |\r\n| keyValueSeparator | char or string which connects the key and value in each parameter | '=' |\r\n| startAfter | tells Dentist JS to only consider extract after the first occurance of this char or string | '?' |\r\n| limit | an integer N, where Dentist JS only returns the first N parameters it can find | Infinity |\r\n\r\nExamples:\r\n\r\n```javascript\r\nvar str = \"helloworld>a-1|b-2|c-3\";\r\nvar params = str.extract({startAfter: \">\", delimiter: '|', keyValueSeparator: '-', limit: 2});\r\nparams.a; // 1\r\nparams.b; // 2\r\nparams.c; // undefined since limit at 2\r\n```\r\n\r\nMore usage examples can be found under ```tests/test.coffee```\r\n\r\n### Dentist JS uses:\r\n\r\n- node\r\n- grunt\r\n- mocha js\r\n- grunt-contrib-uglify\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}